version: '3.6'
services:
  #application
  app:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./7learn:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network


  #application server
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    volumes:
      - ./7learn:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    ports:
      - '80:80'
    networks:
      - app-network

  # MySQL Service
  mysql:
    image: mysql
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: secure
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./data/mysql:/var/lib/mysql
    networks:
      - app-network

  # Elasticsearch Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    volumes:
      - ./data/elastic:/var/lib/elasticsearch/data
    networks:
      - app-network


networks:
    app-network:
       driver: bridge
